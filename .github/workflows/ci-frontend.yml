name: 프론트엔드 이미지 빌드 및 S3 배포
on:
  push:
    branches: [main]
    paths:
      - 'client/**' # 프론트엔드 코드가 변경될 때만 실행
      - '.github/workflows/ci-frontend.yml'
env:
  AWS_REGION: ap-northeast-2 # AWS 리전을 서울로 지정
  S3_BUCKET: tier3-dev-frontend # S3 버킷 이름
  CLOUDFRONT_DISTRIBUTION_ID: E12JSUALIP3E0Y
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 리포지토리 체크아웃
        uses: actions/checkout@v4
      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: '16' # 프로젝트에 맞는 Node.js 버전 선택
      - name: AWS 인증 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: 프론트엔드 종속성 설치
        working-directory: ./client
        run: |
          npm install --legacy-peer-deps
          npm install --save-dev @types/jest --legacy-peer-deps
          npm uninstall webpack webpack-cli --legacy-peer-deps
          npm install --save-dev webpack@1.15.0 --legacy-peer-deps
      - name: 프론트엔드 빌드
        working-directory: ./client
        run: npm run build:prod --legacy-peer-deps
      
      - name: 현재 시간 가져오기
        id: current-time
        run: echo "::set-output name=timestamp::$(date +'%Y%m%d%H%M%S')"
        
      - name: S3 배포
        working-directory: ./client
        run: |
          # dist 폴더 구조를 유지하면서 S3에 업로드
          aws s3 sync ./public s3://${{ env.S3_BUCKET }} --delete
          
          # index.html 파일을 S3 버킷 루트에도 복사
          aws s3 cp ./public/index.html s3://${{ env.S3_BUCKET }}/index.html
          
          # CloudFront 캐시 무효화
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
          
          echo "프론트엔드를 S3 버킷에 배포했습니다: ${{ env.S3_BUCKET }}"
          echo "배포 시간: $(date +'%Y-%m-%d %H:%M:%S')"
